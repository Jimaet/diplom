// üîπ –ò–º–ø–æ—Ä—Ç Firebase üîπ
import { initializeApp } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";
import { getFirestore, collection, getDocs } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js";
document.addEventListener("DOMContentLoaded", function () {
    function enableCarouselScrolling(carousel) {
        let isDown = false;
        let startX;
        let scrollLeft;

        carousel.addEventListener("mousedown", (e) => {
            isDown = true;
            startX = e.pageX - carousel.offsetLeft;
            scrollLeft = carousel.scrollLeft;
            carousel.style.scrollBehavior = "auto";
        });

        carousel.addEventListener("mouseleave", () => {
            isDown = false;
        });

        carousel.addEventListener("mouseup", () => {
            isDown = false;
        });

        carousel.addEventListener("mousemove", (e) => {
            if (!isDown) return;
            e.preventDefault();
            const x = e.pageX - carousel.offsetLeft;
            const walk = (x - startX) * 2;
            carousel.scrollLeft = scrollLeft - walk;
        });

        // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Å–≤–∞–π–ø–∞ (–ø–ª–∞–≤–Ω–∞—è)
        let touchStartX = 0;
        let touchEndX = 0;

        carousel.addEventListener("touchstart", (e) => {
            touchStartX = e.touches[0].clientX;
            carousel.style.scrollBehavior = "auto";
        });

        carousel.addEventListener("touchmove", (e) => {
            touchEndX = e.touches[0].clientX;
            let moveX = touchStartX - touchEndX;
            carousel.scrollLeft += moveX * 1.5;
            touchStartX = touchEndX;
        });

        carousel.addEventListener("touchend", () => {
            carousel.style.scrollBehavior = "smooth";
        });
    }

    const carousels = document.querySelectorAll(".carousel-container");
    carousels.forEach(enableCarouselScrolling);
});
// üîπ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase (—ç—Ç–æ –æ—Å—Ç–∞—ë—Ç—Å—è –≤ –∫–æ–¥–µ, –Ω–æ —Å–∫—Ä—ã—Ç—å –∫–ª—é—á–∏ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ backend) üîπ
const firebaseConfig = {
    apiKey: "AIzaSyDqIDTQrS14wTLsh_jFkD0GZAmEEWW8TDk",
    authDomain: "cooker-62216.firebaseapp.com",
    projectId: "cooker-62216",
    storageBucket: "cooker-62216.firebasestorage.app",
    messagingSenderId: "994568659489",
    appId: "1:994568659489:web:18c15bc15fa5b723a03960"
};

// üîπ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase üîπ
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// üîπ –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤ üîπ
async function loadRecipes() {
    const recipesContainer = document.getElementById("recipes-container");
    if (!recipesContainer) {
        console.error("‚ùå –û—à–∏–±–∫–∞: recipes-container –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        return;
    }

    recipesContainer.innerHTML = ""; // –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π

    console.log("üîπ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤...");

    const recipesQuery = collection(db, "rec");
    const querySnapshot = await getDocs(recipesQuery);

    let loadedRecipes = new Set(); // –•—Ä–∞–Ω–∏–º ID —Ä–µ—Ü–µ–ø—Ç–æ–≤, —á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å –¥—É–±–ª–∏

    querySnapshot.forEach((doc) => {
        const data = doc.data();
        const recipeId = doc.id;
        const imageUrl = data.image ? data.image : "placeholder.jpg";

        if (loadedRecipes.has(recipeId)) {
            console.warn(`‚ö†Ô∏è –î—É–±–ª–∏–∫–∞—Ç —Ä–µ—Ü–µ–ø—Ç–∞: ${recipeId}`);
            return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        }

        loadedRecipes.add(recipeId);

        const recipeCard = `
            <div class="recipe-card">
                <img src="${imageUrl}" class="recipe-img" alt="${data.name}">
                <div class="recipe-info">
                    <h3 class="recipe-title">${data.name}</h3>
                    <p class="recipe-description">${data.dis}</p>
                </div>
                <button class="favorite-button"></button>
                <a href="recipe.html?id=${recipeId}" class="recipe-link">
                    <button class="start-button">–ù–∞—á–∞—Ç—å!</button>
                </a>
            </div>
        `;

        recipesContainer.innerHTML += recipeCard;
    });

    console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤: ${loadedRecipes.size}`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –æ–¥–∏–Ω —Ä–∞–∑
document.addEventListener("DOMContentLoaded", () => {
    loadRecipes();
});
// –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ä–µ—Ü–µ–ø—Ç–æ–≤

// üîπ –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–∫–∞—Ä—É—Å–µ–ª—å) üîπ
function loadCategoryCarousel() {
    const categoryContainer = document.querySelector(".category-carousel .carousel");

    const categories = [
        { name: "–ó–∞–∫—É—Å–∫–∏", image: "k2/zakyski.jpg" },
        { name: "–°–∞–ª–∞—Ç—ã", image: "k2/salat.jpg" },
        { name: "–î–µ—Å–µ—Ä—Ç—ã", image: "k2/desert.jpg" },
        { name: "–í—ã–ø–µ—á–∫–∞", image: "k2/vipechka.jpg" },
        { name: "–ù–∞–ø–∏—Ç–∫–∏", image: "k2/napitki.jpg" },
        { name: "–§–∞—Å—Ç—Ñ—É–¥", image: "k2/fastfod.jpg" },
        { name: "–ì–∞—Ä–Ω–∏—Ä", image: "k2/garnir.jpg" },
        { name: "–ì–æ—Ä—è—á–µ–µ", image: "k2/goryachee.jpg" },
        { name: "–°–æ—É—Å—ã", image: "k2/sousi.jpg" }
    ];

    categoryContainer.innerHTML = ""; // –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π

    categories.forEach(category => {
        const categoryBtn = document.createElement("button");
        categoryBtn.classList.add("category-btn");

        categoryBtn.innerHTML = `
            <img src="${category.image}" alt="${category.name}">
            <span>${category.name}</span>
        `;

        categoryContainer.appendChild(categoryBtn);
    });
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ—Ü–µ–ø—Ç—ã –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", () => {
    loadRecipes();
    loadCategoryCarousel();
});
