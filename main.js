import { initializeApp } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";
import { getFirestore, doc, collection, getDocs, getDoc } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js";

// üîπ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase üîπ
const firebaseConfig = {
    apiKey: "AIzaSyDqIDTQrS14wTLsh_jFkD0GZAmEEWW8TDk",
    authDomain: "cooker-62216.firebaseapp.com",
    projectId: "cooker-62216",
    storageBucket: "cooker-62216.firebasestorage.app",
    messagingSenderId: "994568659489",
    appId: "1:994568659489:web:18c15bc15fa5b723a03960"
};

// üîπ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase üîπ
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

let selectedFilters = new Set(); // –•—Ä–∞–Ω–∏–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã

// üîπ –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤ üîπ
// üîπ –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤ üîπ
async function loadRecipes() {
    const recipesContainer = document.getElementById("recipes-container");
    if (!recipesContainer) {
        console.error("‚ùå –û—à–∏–±–∫–∞: recipes-container –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        return;
    }

    recipesContainer.innerHTML = ""; // –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π

    console.log("üîπ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤...");

    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã. –ö–æ–ª–ª–µ–∫—Ü–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤ —Ç–µ–ø–µ—Ä—å –∏–∑ rec
    const recipeIds = ["recept0", "recept1", "recept2", "recept3", "recept5", "recept6", "recept7"];

    let loadedRecipes = new Set();

    // –ü—Ä–æ–±–µ–≥–∞–µ–º –ø–æ –∫–∞–∂–¥–æ–º—É —Ä–µ—Ü–µ–ø—Ç—É
    for (const recipeId of recipeIds) {
        console.log(`üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ü–µ–ø—Ç–∞ ${recipeId}...`);

        // –ü—É—Ç—å –∫ –¥–∞–Ω–Ω—ã–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–µ—Ü–µ–ø—Ç–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ rec
        const recipeDataRef = doc(db, `rec`, recipeId);
        const recipeDataSnap = await getDoc(recipeDataRef);

        if (recipeDataSnap.exists()) {
            const recipeData = recipeDataSnap.data();
            const imageUrl = recipeData.image ? recipeData.image : "placeholder.jpg";

            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ receptmainX
            const typeDocRef = doc(db, `receptmain${recipeId}`, "type");
            const type2DocRef = doc(db, `receptmain${recipeId}`, "type2");

            // –õ–æ–≥–∏—Ä—É–µ–º –ø—É—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            console.log(`üîπ –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –ø—É—Ç–∏: receptmain${recipeId}/type –∏ receptmain${recipeId}/type2`);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
            const recipeCollectionRef = collection(db, `receptmain${recipeId}`);
            const recipeCollectionSnap = await getDocs(recipeCollectionRef);
            if (recipeCollectionSnap.empty) {
                console.log(`‚ùå –ö–æ–ª–ª–µ–∫—Ü–∏—è receptmain${recipeId} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
                continue;
            }

            // –ü–æ–ª—É—á–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã type –∏ type2
            const typeDocSnap = await getDoc(typeDocRef);
            const type2DocSnap = await getDoc(type2DocRef);

            // –ï—Å–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            if (!typeDocSnap.exists()) {
                console.log(`‚ùå –î–æ–∫—É–º–µ–Ω—Ç type –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞ ${recipeId}`);
            }
            if (!type2DocSnap.exists()) {
                console.log(`‚ùå –î–æ–∫—É–º–µ–Ω—Ç type2 –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞ ${recipeId}`);
            }

            // –°–±–æ—Ä –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞ type
            const typeFilters = typeDocSnap.exists()
                ? Object.values(typeDocSnap.data()).map(val => val.trim())
                : [];
            console.log(`üîπ –§–∏–ª—å—Ç—Ä—ã –∏–∑ type:`, typeFilters);

            // –°–±–æ—Ä –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞ type2
            const type2Filters = type2DocSnap.exists()
                ? Object.values(type2DocSnap.data()).map(val => val.trim())
                : [];
            console.log(`üîπ –§–∏–ª—å—Ç—Ä—ã –∏–∑ type2:`, type2Filters);

            // –û–±—ä–µ–¥–∏–Ω—è–µ–º –æ–±–∞ —Ñ–∏–ª—å—Ç—Ä–∞
            const allFilters = new Set([...typeFilters, ...type2Filters]);

            // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã
            console.log(`üîπ –í—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã —Ä–µ—Ü–µ–ø—Ç–∞ ${recipeId}:`, allFilters);

            // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            if (selectedFilters.size > 0) {
                console.log(`üîπ –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:`, [...selectedFilters]);

                const hasMatchingFilter = [...selectedFilters].some(filter => allFilters.has(filter));
                console.log(`üîπ –†–µ—Ü–µ–ø—Ç ${recipeId} –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é:`, hasMatchingFilter);

                if (!hasMatchingFilter) continue; // –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç, –µ—Å–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –Ω–∏ —Å –æ–¥–Ω–∏–º –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
            }

            // –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ —Ä–µ—Ü–µ–ø—Ç —É–∂–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω
            if (loadedRecipes.has(recipeId)) continue;
            loadedRecipes.add(recipeId);

            // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–µ—Ü–µ–ø—Ç–∞
            const recipeCard = document.createElement("div");
            recipeCard.classList.add("recipe-card");

            recipeCard.innerHTML = `
                <img src="${imageUrl}" class="recipe-img" alt="${recipeData.name}">
                <div class="recipe-info">
                    <h3 class="recipe-title">${recipeData.name}</h3>
                    <p class="recipe-description">${recipeData.dis}</p>
                </div>
                <a href="recipe.html?id=${recipeId}" class="recipe-link">
                    <button class="start-button">–ù–∞—á–∞—Ç—å!</button>
                </a>
            `;

            recipesContainer.appendChild(recipeCard);
        } else {
            console.log(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞ ${recipeId}`);
        }
    }

    console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤: ${loadedRecipes.size}`);
}


// üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ üîπ
function toggleFilter(event) {
    const button = event.target;
    const filterValue = button.textContent.trim();

    if (selectedFilters.has(filterValue)) {
        selectedFilters.delete(filterValue);
        button.classList.remove("active");
    } else {
        selectedFilters.add(filterValue);
        button.classList.add("active");
    }

    loadRecipes();
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤
const filterButtons = document.querySelectorAll(".filter-btn, .category-btn");
filterButtons.forEach(button => button.addEventListener("click", toggleFilter));

// üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ—Ü–µ–ø—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã üîπ
document.addEventListener("DOMContentLoaded", loadRecipes);

// üîπ –õ–æ–≥–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ "Home" üîπ
let homeButton = document.querySelector(".nav-btn:first-child");
let lastClickTime = 0;

if (homeButton) {
    homeButton.addEventListener("click", () => {
        let currentTime = new Date().getTime();
        if (currentTime - lastClickTime < 1000) {
            location.reload();
        } else {
            window.scrollTo({ top: 0, behavior: "smooth" });
        }
        lastClickTime = currentTime;
    });
}
