import { initializeApp } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";
import { getFirestore, doc, collection, getDocs, getDoc } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js";

// üîπ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase üîπ
const firebaseConfig = {
    apiKey: "AIzaSyDqIDTQrS14wTLsh_jFkD0GZAmEEWW8TDk",
    authDomain: "cooker-62216.firebaseapp.com",
    projectId: "cooker-62216",
    storageBucket: "cooker-62216.firebasestorage.app",
    messagingSenderId: "994568659489",
    appId: "1:994568659489:web:18c15bc15fa5b723a03960"
};

// üîπ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase üîπ
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

let selectedFilters = new Set(); // –•—Ä–∞–Ω–∏–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã

// üîπ –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤ üîπ
async function loadRecipes() {
    const recipesContainer = document.getElementById("recipes-container");
    if (!recipesContainer) {
        console.error("‚ùå –û—à–∏–±–∫–∞: recipes-container –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        return;
    }

    recipesContainer.innerHTML = ""; // –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π

    console.log("üîπ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤...");

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ rec (–Ω–∞–ø—Ä–∏–º–µ—Ä, recept1, recept2, ...)
    const recipesSnapshot = await getDocs(collection(db, "rec"));
    
    let loadedRecipes = new Set();

    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Ä–µ—Ü–µ–ø—Ç—É –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ rec
    for (const recipeDoc of recipesSnapshot.docs) {
        const recipeData = recipeDoc.data();
        const recipeId = recipeDoc.id; // –ü–æ–ª—É—á–∞–µ–º ID —Ä–µ—Ü–µ–ø—Ç–∞

        console.log(`üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ü–µ–ø—Ç–∞ ${recipeId}...`);

        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é receptmainX –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞
        const recipeMainRef = doc(db, `receptmain${recipeId}`);
        const recipeMainSnap = await getDoc(recipeMainRef);

        if (recipeMainSnap.exists()) {
            const recipeMainData = recipeMainSnap.data();

            // –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ receptmainX
            const filters = new Set([
                ...(recipeMainData.type || []),
                ...(recipeMainData.type2 || [])
            ]);

            console.log(`üîπ –§–∏–ª—å—Ç—Ä—ã —Ä–µ—Ü–µ–ø—Ç–∞ ${recipeId}:`, filters);

            // –ï—Å–ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã –≤—ã–±—Ä–∞–Ω—ã, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
            if (selectedFilters.size === 0 || [...selectedFilters].some(filter => filters.has(filter))) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Ä–µ—Ü–µ–ø—Ç —É–∂–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω
                if (loadedRecipes.has(recipeId)) continue;
                loadedRecipes.add(recipeId);

                // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–µ—Ü–µ–ø—Ç–∞
                const recipeCard = document.createElement("div");
                recipeCard.classList.add("recipe-card");

                recipeCard.innerHTML = `
                    <img src="${recipeData.image || "placeholder.jpg"}" class="recipe-img" alt="${recipeData.name}">
                    <div class="recipe-info">
                        <h3 class="recipe-title">${recipeData.name}</h3>
                        <p class="recipe-description">${recipeData.dis}</p>
                    </div>
                    <a href="recipe.html?id=${recipeId}" class="recipe-link">
                        <button class="start-button">–ù–∞—á–∞—Ç—å!</button>
                    </a>
                `;

                recipesContainer.appendChild(recipeCard);
            }
        } else {
            console.log(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ receptmain${recipeId}`);
        }
    }

    console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤: ${loadedRecipes.size}`);
}

// üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ üîπ
function toggleFilter(event) {
    const button = event.target;
    const filterValue = button.textContent.trim();

    if (selectedFilters.has(filterValue)) {
        selectedFilters.delete(filterValue);
        button.classList.remove("active");
    } else {
        selectedFilters.add(filterValue);
        button.classList.add("active");
    }

    loadRecipes();
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤
const filterButtons = document.querySelectorAll(".filter-btn, .category-btn");
filterButtons.forEach(button => button.addEventListener("click", toggleFilter));

// üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ—Ü–µ–ø—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã üîπ
document.addEventListener("DOMContentLoaded", loadRecipes);
