// üîπ –ò–º–ø–æ—Ä—Ç Firebase üîπ
import { initializeApp } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";
import { getFirestore, doc, collection, getDocs, query, where } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js";

// üîπ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase üîπ
const firebaseConfig = {
    apiKey: "AIzaSyDqIDTQrS14wTLsh_jFkD0GZAmEEWW8TDk",
    authDomain: "cooker-62216.firebaseapp.com",
    projectId: "cooker-62216",
    storageBucket: "cooker-62216.firebasestorage.app",
    messagingSenderId: "994568659489",
    appId: "1:994568659489:web:18c15bc15fa5b723a03960"
};

// üîπ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase üîπ
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

let selectedType = null;
let selectedType2 = null;

// üîπ –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤ üîπ
async function loadRecipes() {
    const recipesContainer = document.getElementById("recipes-container");
    if (!recipesContainer) {
        console.error("‚ùå –û—à–∏–±–∫–∞: recipes-container –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        return;
    }
    recipesContainer.innerHTML = ""; // –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π

    console.log("üîπ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤...");

    const recipesQuery = collection(db, "rec");
    const querySnapshot = await getDocs(recipesQuery);

    let loadedRecipes = new Set();

    for (const docSnap of querySnapshot.docs) {
        const data = docSnap.data();
        const recipeId = docSnap.id;
        const imageUrl = data.image ? data.image : "placeholder.jpg";

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–∞—Ö —Ä–µ—Ü–µ–ø—Ç–∞
        const mainDocRef = doc(db, `receptmain${recipeId}`);
        const mainDocSnap = await getDocs(collection(db, `receptmain${recipeId}`));

        let type = "";
        let type2 = "";

        mainDocSnap.forEach((doc) => {
            if (doc.id === "type") type = doc.data().value;
            if (doc.id === "type2") type2 = doc.data().value;
        });

        // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        if ((selectedType && type !== selectedType) || (selectedType2 && type2 !== selectedType2)) {
            continue;
        }

        if (loadedRecipes.has(recipeId)) continue;
        loadedRecipes.add(recipeId);

        const recipeCard = document.createElement("div");
        recipeCard.classList.add("recipe-card");

        recipeCard.innerHTML = `
            <img src="${imageUrl}" class="recipe-img" alt="${data.name}">
            <div class="recipe-info">
                <h3 class="recipe-title">${data.name}</h3>
                <p class="recipe-description">${data.dis}</p>
            </div>
            <a href="recipe.html?id=${recipeId}" class="recipe-link">
                <button class="start-button">–ù–∞—á–∞—Ç—å!</button>
            </a>
        `;

        recipesContainer.appendChild(recipeCard);
    }

    console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤: ${loadedRecipes.size}`);
}

// üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ üîπ
function setupFilters() {
    document.querySelectorAll(".filter-btn").forEach((button) => {
        button.addEventListener("click", () => {
            selectedType = button.textContent;
            loadRecipes();
        });
    });

    document.querySelectorAll(".category-btn").forEach((button) => {
        button.addEventListener("click", () => {
            selectedType2 = button.querySelector("span").textContent;
            loadRecipes();
        });
    });
}

// üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ—Ü–µ–ø—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã üîπ
document.addEventListener("DOMContentLoaded", () => {
    loadRecipes();
    setupFilters();
});

// üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ Home üîπ
document.addEventListener("DOMContentLoaded", () => {
    const homeButton = document.querySelector(".nav-btn:first-child"); // –ö–Ω–æ–ø–∫–∞ Home
    let clickCount = 0;
    let clickTimer;

    if (homeButton) {
        homeButton.addEventListener("click", () => {
            clickCount++;

            if (clickCount === 1) {
                // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–≤–µ—Ä—Ö
                window.scrollTo({ top: 0, behavior: "smooth" });

                // –°–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                clickTimer = setTimeout(() => {
                    clickCount = 0;
                }, 1000);
            } else if (clickCount === 2) {
                // –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ ‚Äî –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                clearTimeout(clickTimer);
                location.reload();
            }
        });
    } else {
        console.error("‚ùå –û—à–∏–±–∫–∞: –ö–Ω–æ–ø–∫–∞ 'Home' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
    }
});
