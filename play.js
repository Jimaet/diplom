import { db } from "./firebase-config.js";
import { collection, doc, setDoc, getDocs, getDoc } from "https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js";

let cachedProducts = [];

document.getElementById("add-product").addEventListener("click", () => {
    const productList = document.getElementById("product-list");

    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
    const newProductItem = document.createElement("div");
    newProductItem.classList.add("product-item");

    const newInput = document.createElement("input");
    newInput.type = "text";
    newInput.placeholder = "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç...";

    newProductItem.appendChild(newInput);
    productList.appendChild(newProductItem);

    // –î–æ–∂–∏–¥–∞–µ–º—Å—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ DOM –∏ –≤–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    setTimeout(() => {
        console.log("üÜï –ù–æ–≤–æ–µ –ø–æ–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ, –≤–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ...");
        setupAutocomplete(newInput);
    }, 100);
});

// ‚ö° –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –∫—ç—à –∏–∑ Firestore
async function loadProducts() {
    console.log("üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –∫—ç—à...");
    cachedProducts = []; // –û—á–∏—â–∞–µ–º –∫—ç—à –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π

    for (let i = 1; i <= 18; i++) {
        const docRef = doc(db, "products", `${i}`);
        const docSnap = await getDoc(docRef);
        if (docSnap.exists()) {
            cachedProducts.push(...Object.values(docSnap.data()));
        }
    }
    console.log("‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –∫—ç—à:", cachedProducts);
}

// üîç –ò—â–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –∫—ç—à–µ
function searchProducts(query) {
    if (query.length < 2) return [];
    return cachedProducts.filter(name => name.toLowerCase().startsWith(query.toLowerCase()));
}

// ‚ú® –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
function setupAutocomplete(inputField) {
    const suggestionBox = document.createElement("div");
    suggestionBox.classList.add("suggestions");
    inputField.parentNode.appendChild(suggestionBox);

    inputField.addEventListener("input", () => {
        const query = inputField.value.trim();
        suggestionBox.innerHTML = "";

        if (query.length < 2) return;

        const results = searchProducts(query);
        console.log(`üìã –ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è ${query}:`, results);

        results.forEach(product => {
            const item = document.createElement("div");
            item.classList.add("suggestion-item");
            item.textContent = product;
            item.addEventListener("click", () => {
                inputField.value = product;
                suggestionBox.innerHTML = "";
            });
            suggestionBox.appendChild(item);
        });
    });

    document.addEventListener("click", (e) => {
        if (!suggestionBox.contains(e.target) && e.target !== inputField) {
            suggestionBox.innerHTML = "";
        }
    });
}

// üîÑ –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª–µ–π
function setupAutocompleteForExistingInputs() {
    document.querySelectorAll("#product-list .product-item input[type='text']").forEach(setupAutocomplete);
}

// üîò –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä –∫–Ω–æ–ø–æ–∫
function setupMultiSelect(selector) {
    document.querySelectorAll(selector).forEach(btn => {
        btn.addEventListener("click", () => {
            btn.classList.toggle("selected");
        });
    });
}
