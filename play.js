import { db } from "./firebase-config.js";
import { collection, doc, setDoc, getDocs, getDoc } from "https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js";

document.addEventListener("DOMContentLoaded", async () => {
    console.log("üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –∫—ç—à...");

    const addProductBtn = document.getElementById("add-product");
    const productList = document.getElementById("product-list");

    let cachedProducts = [];

    // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    async function loadProducts() {
        try {
            for (let i = 1; i <= 17; i++) {
                const docRef = doc(db, "products", ${i});
                const docSnap = await getDoc(docRef);
                if (docSnap.exists()) {
                    cachedProducts.push(...Object.values(docSnap.data()));
                }
            }
            console.log("‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –∫—ç—à:", cachedProducts);
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:", error);
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    function searchProducts(query) {
        if (query.length < 2) return [];
        return cachedProducts.filter(name => name.toLowerCase().startsWith(query.toLowerCase()));
    }

    // –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    function setupAutocomplete(inputField) {
        const suggestionBox = document.createElement("div");
        suggestionBox.classList.add("suggestions");
        inputField.parentNode.appendChild(suggestionBox);

        inputField.addEventListener("input", () => {
            const query = inputField.value.trim();
            suggestionBox.innerHTML = "";

            if (query.length < 2) return;

            const results = searchProducts(query);
            results.forEach(product => {
                const item = document.createElement("div");
                item.classList.add("suggestion-item");
                item.textContent = product;
                item.addEventListener("click", () => {
                    inputField.value = product;
                    suggestionBox.innerHTML = "";
                });
                suggestionBox.appendChild(item);
            });
        });

        document.addEventListener("click", (e) => {
            if (!suggestionBox.contains(e.target) && e.target !== inputField) {
                suggestionBox.innerHTML = "";
            }
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
    function addProductField() {
        const productItem = document.createElement("div");
        productItem.classList.add("product-item");

        const nameInput = document.createElement("input");
        nameInput.type = "text";
        nameInput.placeholder = "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç";

        const amountInput = document.createElement("input");
        amountInput.type = "number"; // –¢–µ–ø–µ—Ä—å –≤–≤–æ–¥ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞
        amountInput.placeholder = "–ì—Ä–∞–º–º—ã / —à—Ç—É–∫–∏";

        const deleteBtn = document.createElement("button");
        deleteBtn.innerHTML = "‚úñ";
        deleteBtn.classList.add("delete-btn");
        deleteBtn.addEventListener("click", () => productItem.remove());

        productItem.appendChild(nameInput);
        productItem.appendChild(amountInput);
        productItem.appendChild(deleteBtn);
        productList.appendChild(productItem);

        // –ü–æ–¥–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
        setupAutocomplete(nameInput);
    }

    addProductBtn.addEventListener("click", addProductField);

    // –§—É–Ω–∫—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
    function setupMultiSelect(selector) {
        document.querySelectorAll(selector).forEach(btn => {
            btn.addEventListener("click", () => {
                btn.classList.toggle("selected");
                if (btn.classList.contains("selected")) {
                    btn.style.backgroundColor = "#5D7B76";
                } else {
                    btn.style.backgroundColor = "#FFBE62";
                }
            });
        });
    }

    // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –∑–∞—Ç–µ–º –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
    await loadProducts();
    setupMultiSelect(".tech-btn"); // –î–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ—Ö–Ω–∏–∫–∏
});
