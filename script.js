document.addEventListener("DOMContentLoaded", function () {
    function enableCarouselScrolling(carousel) {
        let isDown = false;
        let startX;
        let scrollLeft;

        carousel.addEventListener("mousedown", (e) => {
            isDown = true;
            startX = e.pageX - carousel.offsetLeft;
            scrollLeft = carousel.scrollLeft;
            carousel.style.scrollBehavior = "auto";
        });

        carousel.addEventListener("mouseleave", () => {
            isDown = false;
        });

        carousel.addEventListener("mouseup", () => {
            isDown = false;
        });

        carousel.addEventListener("mousemove", (e) => {
            if (!isDown) return;
            e.preventDefault();
            const x = e.pageX - carousel.offsetLeft;
            const walk = (x - startX) * 2;
            carousel.scrollLeft = scrollLeft - walk;
        });

        // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Å–≤–∞–π–ø–∞ (–ø–ª–∞–≤–Ω–∞—è)
        let touchStartX = 0;
        let touchEndX = 0;

        carousel.addEventListener("touchstart", (e) => {
            touchStartX = e.touches[0].clientX;
            carousel.style.scrollBehavior = "auto";
        });

        carousel.addEventListener("touchmove", (e) => {
            touchEndX = e.touches[0].clientX;
            let moveX = touchStartX - touchEndX;
            carousel.scrollLeft += moveX * 1.5;
            touchStartX = touchEndX;
        });

        carousel.addEventListener("touchend", () => {
            carousel.style.scrollBehavior = "smooth";
        });
    }

    const carousels = document.querySelectorAll(".carousel-container");
    carousels.forEach(enableCarouselScrolling);
});
function addToFavourites(recipeId) {
    let userId = Telegram.WebApp.initDataUnsafe.user.id; // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    if (!userId) {
        alert("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Telegram ID!");
        return;
    }

    firebase.database().ref(`person/${userId}/favourites/${recipeId}`).set(true)
        .then(() => {
            alert("‚úÖ –†–µ—Ü–µ–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!");
        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:", error);
        });
}
function removeFromFavourites(recipeId) {
    let userId = Telegram.WebApp.initDataUnsafe.user.id;

    if (!userId) {
        alert("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Telegram ID!");
        return;
    }

    firebase.database().ref(`person/${userId}/favourites/${recipeId}`).remove()
        .then(() => {
            alert("‚ùå –†–µ—Ü–µ–ø—Ç —É–¥–∞–ª—ë–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!");
        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:", error);
        });
}
function toggleFavourite(recipeId, button) {
    let userId = Telegram.WebApp.initDataUnsafe.user.id;

    if (!userId) {
        alert("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Telegram ID!");
        return;
    }

    let favRef = firebase.database().ref(`person/${userId}/favourites/${recipeId}`);

    favRef.get().then(snapshot => {
        if (snapshot.exists()) {
            // –£–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º ‚Äî —É–¥–∞–ª—è–µ–º
            favRef.remove().then(() => {
                button.textContent = "ü§ç –î–æ–±–∞–≤–∏—Ç—å";
                alert("‚ùå –†–µ—Ü–µ–ø—Ç —É–¥–∞–ª—ë–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!");
            });
        } else {
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
            favRef.set(true).then(() => {
                button.textContent = "‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º";
                alert("‚úÖ –†–µ—Ü–µ–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!");
            });
        }
    }).catch(error => {
        console.error("–û—à–∏–±–∫–∞:", error);
    });
}
